<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-09T14:44:50 IST" name="Default suite" finished-at="2022-09-09T14:44:50 IST" duration-ms="48">
    <groups>
    </groups>
    <test started-at="2022-09-09T14:44:50 IST" name="Default test" finished-at="2022-09-09T14:44:50 IST" duration-ms="48">
      <class name="testing.StringCalculatorTest">
        <test-method is-config="true" signature="init()[pri:0, instance:testing.StringCalculatorTest@2df9b86]" started-at="2022-09-09T14:44:50 IST" name="init" finished-at="2022-09-09T14:44:50 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="supportOddEvenAddition()[pri:0, instance:testing.StringCalculatorTest@2df9b86]" started-at="2022-09-09T14:44:50 IST" name="supportOddEvenAddition" finished-at="2022-09-09T14:44:50 IST" duration-ms="4" status="FAIL">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[For input string: "0//2"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: For input string: "0//2"
at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
at java.base/java.lang.Integer.parseInt(Integer.java:660)
at java.base/java.lang.Integer.valueOf(Integer.java:991)
at testing.StringCalculator.convertToInt(StringCalculator.java:34)
at testing.StringCalculator.sum(StringCalculator.java:67)
at testing.StringCalculator.add(StringCalculator.java:21)
at testing.StringCalculatorTest.supportOddEvenAddition(StringCalculatorTest.java:79)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- supportOddEvenAddition -->
        <test-method signature="testAddAlphabets()[pri:0, instance:testing.StringCalculatorTest@2df9b86]" started-at="2022-09-09T14:44:50 IST" name="testAddAlphabets" finished-at="2022-09-09T14:44:50 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAlphabets -->
        <test-method signature="testAddMultipleNumbers()[pri:0, instance:testing.StringCalculatorTest@2df9b86]" started-at="2022-09-09T14:44:50 IST" name="testAddMultipleNumbers" finished-at="2022-09-09T14:44:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMultipleNumbers -->
        <test-method signature="testAddOneNumber()[pri:0, instance:testing.StringCalculatorTest@2df9b86]" started-at="2022-09-09T14:44:50 IST" name="testAddOneNumber" finished-at="2022-09-09T14:44:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOneNumber -->
        <test-method signature="testAddStringNumbers()[pri:0, instance:testing.StringCalculatorTest@2df9b86]" started-at="2022-09-09T14:44:50 IST" name="testAddStringNumbers" finished-at="2022-09-09T14:44:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStringNumbers -->
        <test-method signature="testEmptyString()[pri:0, instance:testing.StringCalculatorTest@2df9b86]" started-at="2022-09-09T14:44:50 IST" name="testEmptyString" finished-at="2022-09-09T14:44:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyString -->
        <test-method signature="testNegativeNumber()[pri:0, instance:testing.StringCalculatorTest@2df9b86]" started-at="2022-09-09T14:44:50 IST" name="testNegativeNumber" finished-at="2022-09-09T14:44:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeNumber -->
        <test-method signature="testNewLine()[pri:0, instance:testing.StringCalculatorTest@2df9b86]" started-at="2022-09-09T14:44:50 IST" name="testNewLine" finished-at="2022-09-09T14:44:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewLine -->
        <test-method signature="testOtherDelimiter()[pri:0, instance:testing.StringCalculatorTest@2df9b86]" started-at="2022-09-09T14:44:50 IST" name="testOtherDelimiter" finished-at="2022-09-09T14:44:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOtherDelimiter -->
        <test-method signature="testOverThousand()[pri:0, instance:testing.StringCalculatorTest@2df9b86]" started-at="2022-09-09T14:44:50 IST" name="testOverThousand" finished-at="2022-09-09T14:44:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverThousand -->
        <test-method is-config="true" signature="destroy()[pri:0, instance:testing.StringCalculatorTest@2df9b86]" started-at="2022-09-09T14:44:50 IST" name="destroy" finished-at="2022-09-09T14:44:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
      </class> <!-- testing.StringCalculatorTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
